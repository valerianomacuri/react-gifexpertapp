{"version":3,"sources":["components/AddCategories.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GrifGridItem","id","title","url","className","src","alt","toUpperCase","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACG,sBAAMC,SAXY,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMnB,SAEC,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAe,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAErC,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,EAAMK,oB,uBCNVC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbP,EAFa,iDAEmCQ,UAAUF,GAF7C,+DAGAG,MAAOT,GAHP,cAGbU,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAeZa,GAfY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GAGCH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAM3B,CAAEb,IAGGc,EDnB0BK,CAAcnB,GAAlCU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAMrB,OACI,qCACI,oBAAIlB,UAAU,mCAAd,SAAmDK,IAElDa,GAAW,mBAAGlB,UAAU,kCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACMe,EAAOF,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEIA,GADCA,EAAIjB,aEOd4B,EAxBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAKvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWb,KAAK,SAACR,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCf7BsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4c125277.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats] )\r\n            setInputValue('')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n       <form onSubmit={ handleSubmit }>\r\n\r\n        <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n        /> \r\n       </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GrifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate_animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title.toUpperCase() }</p>\r\n        </div>\r\n    )\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=EY8m29In8cQjH52tIWguNst7JHzqa57V&limit=10`\r\n    const resp = await fetch( url )\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs\r\n\r\n\r\n}    \r\n","import React from 'react'\r\nimport { GrifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category )\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate_animated animate__fadeIn\">{ category }</h3>\r\n\r\n            {loading && <p className=\"animate_animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                { images.map( img => (\r\n                    <GrifGridItem\r\n                    key={img.id} \r\n                    {...img } />\r\n                ) )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n\r\n               \r\n            })\r\n    },[ category ])\r\n\r\n\r\n    return state // { data: [], loading: true }\r\n\r\n}","import React, {useState} from \"react\"\r\nimport { AddCategory } from \"./components/AddCategories\"\r\nimport { GifGrid } from \"./components/GifGrid\"\r\n\r\n\r\nconst GifExpertApp = () => {\r\n \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}